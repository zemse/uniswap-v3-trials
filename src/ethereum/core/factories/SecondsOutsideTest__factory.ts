/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SecondsOutsideTest,
  SecondsOutsideTestInterface,
} from "../SecondsOutsideTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickSpacing",
        type: "int24",
      },
    ],
    name: "clear",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickSpacing",
        type: "int24",
      },
      {
        internalType: "uint32",
        name: "time",
        type: "uint32",
      },
    ],
    name: "cross",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickSpacing",
        type: "int24",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickCurrent",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickSpacing",
        type: "int24",
      },
      {
        internalType: "uint32",
        name: "time",
        type: "uint32",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickCurrent",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickSpacing",
        type: "int24",
      },
      {
        internalType: "uint32",
        name: "time",
        type: "uint32",
      },
    ],
    name: "secondsInside",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    name: "secondsOutside",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061043f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063a757e4fd11610050578063a757e4fd14610118578063d047b9f41461014a578063f3feca9e146101aa57610072565b806323472a3d14610077578063303a337e146100a35780639bb4f56f146100e1575b600080fd5b6100a16004803603604081101561008d57600080fd5b508035600290810b9160200135900b6101d4565b005b6100a1600480360360808110156100b957600080fd5b508035600290810b916020810135820b916040820135900b906060013563ffffffff166101e4565b6100a1600480360360608110156100f757600080fd5b508035600290810b91602081013590910b906040013563ffffffff166101f8565b6101386004803603602081101561012e57600080fd5b503560020b61020a565b60408051918252519081900360200190f35b610191600480360360a081101561016057600080fd5b508035600290810b916020810135820b916040820135810b91606081013590910b906080013563ffffffff1661021c565b6040805163ffffffff9092168252519081900360200190f35b610191600480360360408110156101c057600080fd5b508035600290810b9160200135900b610236565b6101e06000838361024a565b5050565b6101f260008585858561028c565b50505050565b61020560008484846102dd565b505050565b60006020819052908152604090205481565b600061022c81878787878761032e565b9695505050505050565b60006102438184846103a2565b9392505050565b60008061025784846103d9565b600291820b90910b60009081526020969096526040909520805463ffffffff60ff9097169690961b1990951690945550505050565b8260020b8460020b136102d6576000806102a686856103d9565b600291820b90910b6000908152602089905260409020805463ffffffff861660ff9093169290921b909117905550505b5050505050565b6000806102ea85856103d9565b600291820b90910b60009081526020979097526040909620805460ff90971687811c9485900363ffffffff908116821b9516901b9096189290921790945550505050565b6000808660020b8560020b12610350576103498888866103a2565b9050610360565b61035b8888866103a2565b830390505b60008660020b8660020b12156103825761037b8988876103a2565b9050610392565b61038d8988876103a2565b840390505b9083030390509695505050505050565b60008060006103b185856103d9565b600291820b90910b60009081526020889052604090205460ff9091161c925050509392505050565b6000808260020b8460020b816103eb57fe5b0760020b156103f957600080fd5b60008360020b8560020b8161040a57fe5b05905060038160020b901d925060088160020b8161042457fe5b07602002915050925092905056fea164736f6c6343000706000a";

export class SecondsOutsideTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SecondsOutsideTest> {
    return super.deploy(overrides || {}) as Promise<SecondsOutsideTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SecondsOutsideTest {
    return super.attach(address) as SecondsOutsideTest;
  }
  connect(signer: Signer): SecondsOutsideTest__factory {
    return super.connect(signer) as SecondsOutsideTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SecondsOutsideTestInterface {
    return new utils.Interface(_abi) as SecondsOutsideTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SecondsOutsideTest {
    return new Contract(address, _abi, signerOrProvider) as SecondsOutsideTest;
  }
}
