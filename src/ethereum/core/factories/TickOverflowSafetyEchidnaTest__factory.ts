/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TickOverflowSafetyEchidnaTest,
  TickOverflowSafetyEchidnaTestInterface,
} from "../TickOverflowSafetyEchidnaTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseFeeGrowthGlobal0X128",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseFeeGrowthGlobal1X128",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "target",
        type: "int24",
      },
    ],
    name: "moveToTick",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int128",
        name: "liquidityDelta",
        type: "int128",
      },
    ],
    name: "setPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526001805462ffffff19169055600060028190556001600160ff1b036003819055600455600581905560065534801561003b57600080fd5b506106b08061004b6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630b0c061f146100515780633f03e19414610070578063541bdfb11461008d578063af759368146100c1575b600080fd5b61006e6004803603602081101561006757600080fd5b50356100e1565b005b61006e6004803603602081101561008657600080fd5b5035610104565b61006e600480360360608110156100a357600080fd5b508035600290810b91602081013590910b9060400135600f0b610127565b61006e600480360360208110156100d757600080fd5b503560020b6102ce565b600554818101116100f157600080fd5b6003805482019055600580549091019055565b6006548181011161011457600080fd5b6004805482019055600680549091019055565b600f19600284900b1361013957600080fd5b6010600283900b1261014a57600080fd5b8160020b8360020b1261015c57600080fd5b60015460035460045460009261019492879260029290920b918691908660206001600160801b035b60009796959493929190046103f5565b600180546003546004549394506000936101c193889360020b928892909160206001600160801b03610184565b9050811561023057600083600f0b121561020b57600285810b900b6000908152602081905260409020546001600160801b0316156101fb57fe5b610206600086610545565b610230565b600285810b900b6000908152602081905260409020546001600160801b031661023057fe5b801561029d57600083600f0b121561027857600284810b900b6000908152602081905260409020546001600160801b03161561026857fe5b610273600085610545565b61029d565b600284810b900b6000908152602081905260409020546001600160801b031661029d57fe5b60028054600f85900b0190819055600013156102b557fe5b6002546102c757600060058190556006555b5050505050565b600f19600282900b136102e057600080fd5b6010600282900b126102f157600080fd5b600154600282810b91810b900b146103f257600154600282810b91810b900b12156103835760018054600290810b909101810b900b6000908152602081905260409020546001600160801b031615610361576001805460035460045461035f9360009360020b019190610569565b505b60018054600281810b8301900b62ffffff1662ffffff199091161790556103ed565b600154600290810b810b900b6000908152602081905260409020546001600160801b0316156103ca576001546003546004546103c89260009260029190910b91610569565b505b60018054600019600282810b91909101900b62ffffff1662ffffff199091161790555b6102f1565b50565b600287810b900b600090815260208990526040812080546001600160801b031682610420828a6105a5565b9050846001600160801b0316816001600160801b0316111561046e576040805162461bcd60e51b81526020600482015260026024820152614c4f60f01b604482015290519081900360640190fd5b6001600160801b0382811615908216158114159450156104a4578960020b8b60020b136104a45760018301889055600283018790555b82546fffffffffffffffffffffffffffffffff19166001600160801b038216178355856104f65782546104f1906104ec90600160801b9004600f90810b810b908c900b610661565b610677565b610517565b8254610517906104ec90600160801b9004600f90810b810b908c900b61068d565b8354600f9190910b6001600160801b03908116600160801b0291161790925550909998505050505050505050565b600290810b810b600090815260209290925260408220828155600181018390550155565b600292830b830b60009081526020949094526040909320600181018054909203909155908101805490920390915554600160801b9004600f0b90565b60008082600f0b121561060a57826001600160801b03168260000384039150816001600160801b031610610605576040805162461bcd60e51b81526020600482015260026024820152614c5360f01b604482015290519081900360640190fd5b61065b565b826001600160801b03168284019150816001600160801b0316101561065b576040805162461bcd60e51b81526020600482015260026024820152614c4160f01b604482015290519081900360640190fd5b92915050565b8181018281121560008312151461065b57600080fd5b80600f81900b811461068857600080fd5b919050565b8082038281131560008312151461065b57600080fdfea164736f6c6343000706000a";

export class TickOverflowSafetyEchidnaTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TickOverflowSafetyEchidnaTest> {
    return super.deploy(
      overrides || {}
    ) as Promise<TickOverflowSafetyEchidnaTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TickOverflowSafetyEchidnaTest {
    return super.attach(address) as TickOverflowSafetyEchidnaTest;
  }
  connect(signer: Signer): TickOverflowSafetyEchidnaTest__factory {
    return super.connect(signer) as TickOverflowSafetyEchidnaTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TickOverflowSafetyEchidnaTestInterface {
    return new utils.Interface(_abi) as TickOverflowSafetyEchidnaTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TickOverflowSafetyEchidnaTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TickOverflowSafetyEchidnaTest;
  }
}
