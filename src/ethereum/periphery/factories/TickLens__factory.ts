/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TickLens } from "../TickLens";

export class TickLens__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TickLens> {
    return super.deploy(overrides || {}) as Promise<TickLens>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TickLens {
    return super.attach(address) as TickLens;
  }
  connect(signer: Signer): TickLens__factory {
    return super.connect(signer) as TickLens__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TickLens {
    return new Contract(address, _abi, signerOrProvider) as TickLens;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int16",
        name: "tickBitmapIndex",
        type: "int16",
      },
    ],
    name: "getPopulatedTicksInWord",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "tick",
            type: "int24",
          },
          {
            internalType: "int128",
            name: "liquidityNet",
            type: "int128",
          },
          {
            internalType: "uint128",
            name: "liquidityGross",
            type: "uint128",
          },
        ],
        internalType: "struct ITickLens.PopulatedTick[]",
        name: "populatedTicks",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104d4806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063351fb47814610030575b600080fd5b61004361003e366004610343565b610059565b604051610050919061043a565b60405180910390f35b606060008373ffffffffffffffffffffffffffffffffffffffff16635339c296846040518263ffffffff1660e01b815260040161009691906104ab565b60206040518083038186803b1580156100ae57600080fd5b505afa1580156100c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e69190610422565b90506000805b610100811015610110576001811b831615610108576001909101905b6001016100ec565b5060008573ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561015957600080fd5b505afa15801561016d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101919190610399565b90508167ffffffffffffffff811180156101aa57600080fd5b506040519080825280602002602001820160405280156101e457816020015b6101d1610323565b8152602001906001900390816101c95790505b50935060005b610100811015610319576001811b841615610311576040517ff30dba93000000000000000000000000000000000000000000000000000000008152600187900b60020b60081b8201830290600090819073ffffffffffffffffffffffffffffffffffffffff8b169063f30dba93906102669086906004016104b9565b60806040518083038186803b15801561027e57600080fd5b505afa158015610292573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b691906103c1565b50509150915060405180606001604052808460020b815260200182600f0b8152602001836fffffffffffffffffffffffffffffffff168152508887600190039750878151811061030257fe5b60200260200101819052505050505b6001016101ea565b5050505092915050565b604080516060810182526000808252602082018190529181019190915290565b60008060408385031215610355578182fd5b823573ffffffffffffffffffffffffffffffffffffffff81168114610378578283fd5b91506020830135600181900b811461038e578182fd5b809150509250929050565b6000602082840312156103aa578081fd5b81518060020b81146103ba578182fd5b9392505050565b600080600080608085870312156103d6578182fd5b84516fffffffffffffffffffffffffffffffff811681146103f5578283fd5b80945050602085015180600f0b811461040c578283fd5b6040860151606090960151949790965092505050565b600060208284031215610433578081fd5b5051919050565b602080825282518282018190526000919060409081850190868401855b8281101561049e578151805160020b855286810151600f0b878601528501516fffffffffffffffffffffffffffffffff168585015260609093019290850190600101610457565b5091979650505050505050565b60019190910b815260200190565b60029190910b81526020019056fea164736f6c6343000706000a";
